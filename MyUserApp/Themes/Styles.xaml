<!-- File: MyUserApp/Themes/Styles.xaml -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
    </Style>

    <Style TargetType="Border">
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
    </Style>

    <!-- Button Styles -->
    <Style x:Key="BaseButtonStyle" TargetType="Button">
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlPressedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PrimaryActionButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{DynamicResource PrimaryAccentBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryAccentBrush}"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource PrimaryActionButtonStyle}"/>

    <Style x:Key="SecondaryButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
    </Style>

    <Style x:Key="SaveButtonStyle" TargetType="Button" BasedOn="{StaticResource PrimaryActionButtonStyle}">
        <Setter Property="Background" Value="{DynamicResource SuccessBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SuccessBrush}"/>
        <Setter Property="Content" Value="Saved"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsDirty}" Value="True">
                <Setter Property="Background" Value="{DynamicResource WarningBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource WarningBrush}"/>
                <Setter Property="Content" Value="Save"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="IconButtonToolBarStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Control Styles -->
    <Style TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style TargetType="PasswordBox">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
    </Style>

    <ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2" CornerRadius="3"
                    Background="{DynamicResource ControlBackgroundBrush}"
                    BorderBrush="{DynamicResource BorderBrush}"
                    BorderThickness="1" />
            <Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"
                  Data="M 0 0 L 4 4 L 8 0 Z" Fill="{DynamicResource GlyphBrush}" />
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton" 
                                      Template="{StaticResource ComboBoxToggleButtonTemplate}" 
                                      Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press"/>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left" />
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="{DynamicResource SecondaryBackgroundBrush}" BorderThickness="1" BorderBrush="{DynamicResource BorderBrush}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ToggleButton" Property="Background" Value="{DynamicResource ControlHoverBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBoxItem">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ControlHoverBrush}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource SecondaryAccentBrush}"/>
                <Setter Property="Foreground" Value="#FFFFFF"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TabControl">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style TargetType="TabItem">
        <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1,1,1,0"
                            Background="{TemplateBinding Background}"
                            Margin="0,0,-1,0"
                            CornerRadius="3,3,0,0">
                        <ContentPresenter ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryBackgroundBrush}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="GroupBox">
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextBrush}"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Margin" Value="0,5,0,5"/>
    </Style>

    <!-- DataGrid Style -->
    <Style TargetType="DataGrid">
        <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="RowBackground" Value="Transparent"/>
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource ControlBackgroundBrush}"/>
    </Style>

    <Style TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="Padding" Value="5"/>
    </Style>

    <Style TargetType="DataGridRow">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ControlHoverBrush}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource SecondaryAccentBrush}"/>
                <Setter Property="Foreground" Value="#FFFFFF"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ExpanderStyle" TargetType="Expander">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0,0,0,5"/>
    </Style>
    <Style TargetType="Expander" BasedOn="{StaticResource ExpanderStyle}"/>

</ResourceDictionary>